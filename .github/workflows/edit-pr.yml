name: Auto Edit Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened

permissions:
  contents: write
  pull-requests: write

jobs:
  edit-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Extract Ticket Name
        id: extract
        run: |
          branch_name="${{ github.head_ref }}"
          ticket_name="${branch_name#*/}"
          echo "ticket=$ticket_name" >> $GITHUB_OUTPUT

      - name: Get Original PR body
        id: get_body
        run: |
          pr_url="${{ github.event.pull_request.html_url }}"
          original_body=$(gh pr view "$pr_url" --json body --template '{{.body}}')
          
          if [ -z "$original_body" ]; then
          original_body="(No description provided)"
          fi
          
          echo "original<<EOF" >> $GITHUB_OUTPUT
          echo "$original_body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Jira Information
        id: jira
        run: |
          response=$(curl -s -u "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -H "Accept: application/json" \
            "https://${{ secrets.JIRA_DOMAIN }}/rest/api/3/issue/${{ steps.extract.outputs.ticket }}")
          
          fix_versions=$(echo "$response" | jq -r '[.fields.fixVersions[].name] | join(", ")')
          parent_key=$(echo "$response" | jq -r '.fields.parent.key // empty')
          due_date=$(echo "$response" | jq -r '.fields.duedate // empty')

          echo "fix_versions=$fix_versions" >> $GITHUB_OUTPUT
          echo "parent_key=$parent_key" >> $GITHUB_OUTPUT
          echo "due_date=$due_date" >> $GITHUB_OUTPUT
        env:
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_DOMAIN: ${{ secrets.JIRA_DOMAIN }}

      - name: Update PR Body
        id: update_body
        run: |
          pr_url="${{ github.event.pull_request.html_url }}"
          body=$(gh pr view "$pr_url" --json body --template '{{.body}}')
          
          parent_key="${{ steps.jira.outputs.parent_key }}"
          if [ -z "${{ steps.jira.outputs.due_date }}" ]; then
            due_date=""
          else
            due_date="* Due Date : ${{ steps.jira.outputs.due_date }}"
          fi
          
          ticket="${{ steps.extract.outputs.ticket }}"
          updated_body="${body//\{ticket\}/$ticket}"
          updated_body="${body//\{parent_key\}/$parent_key}"
          updated_body="*${body//\{due_date\}/$due_date}"

          echo "updated_body<<EOF" >> $GITHUB_OUTPUT
          echo "$updated_body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PR Title
        id: update_title
        run: |
          # Add branch name
          original_title="${{ github.event.pull_request.title }}"
          current_branch="${{ github.event.pull_request.head.ref }}"
          if [[ "${{ steps.extract.outputs.title }}" == *"${{ steps.extract.outputs.branch }}"* ]]; then
            new_title="$original_title"
          else
            new_title="$current_branch : $original_title"
          fi
          
          # Add Jira fix version
          fix_versions="${{ steps.jira.outputs.fix_versions }}"
          if [[ "$new_title" == *"$fix_versions"* ]]; then
            new_title="$new_title"
          else
            new_title="$new_title (-> $fix_version)"
          fi
          
          echo "$updated_title" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Edit PR title and body
        run: |
          echo "${{ steps.update_title.outputs.updated_title }}" > pr_title.txt
          echo "${{ steps.update_body.outputs.updated_body }}" > pr_body.md

          gh pr edit "${{ github.event.pull_request.html_url }}" \
            --title "$(cat pr_title.txt)" \
            --body "$(cat pr_body.md)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}